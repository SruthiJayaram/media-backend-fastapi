# Task 3: Docker Compose for production deployment with Redis
version: '3.8'

services:
  # FastAPI application
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///./media.db
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - ENVIRONMENT=production
    volumes:
      - ./storage:/app/storage
      - ./media.db:/app/media.db
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: PostgreSQL for production database
  # Uncomment and configure for production use
  # postgres:
  #   image: postgres:15
  #   environment:
  #     - POSTGRES_USER=fastapi_user
  #     - POSTGRES_PASSWORD=fastapi_password
  #     - POSTGRES_DB=fastapi_media
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U fastapi_user"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  redis_data:
  # postgres_data:  # Uncomment for PostgreSQL

networks:
  default:
    name: fastapi_media_network
